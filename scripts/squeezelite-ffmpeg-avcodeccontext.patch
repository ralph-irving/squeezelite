diff --git a/ffmpeg.c b/ffmpeg.c
index 40cfee7..b89fe0f 100644
--- a/ffmpeg.c
+++ b/ffmpeg.c
@@ -43,7 +43,6 @@ struct ff_s {
 	AVInputFormat *input_format;
 	AVFormatContext *formatC;
 	AVCodecContext *codecC;
-	AVCodecParameters *codecP;
 	AVFrame *frame;
 	AVPacket *avpkt;
 	unsigned mmsh_bytes_left;
@@ -62,9 +61,6 @@ struct ff_s {
 	void (* avcodec_free_frame)(AVFrame **);
 #endif
 	int attribute_align_arg (* avcodec_decode_audio4)(AVCodecContext *, AVFrame *, int *, const AVPacket *);
-	AVCodecContext * (* avcodec_alloc_context3)(const AVCodec *);
-	void (* avcodec_free_context)(AVCodecContext **);
-	int (* avcodec_parameters_to_context)(AVCodecContext *, const AVCodecParameters *);
 	// ffmpeg symbols to be dynamically loaded from libavformat
 	unsigned (* avformat_version)(void);
 	AVFormatContext * (* avformat_alloc_context)(void);
@@ -308,7 +304,7 @@ static decode_state ff_decode(void) {
 		}
 		
 		if (ff->wma && ff->wma_playstream < ff->formatC->nb_streams) {
-			if (ff->formatC->streams[ff->wma_playstream]->codecpar->codec_type == AVMEDIA_TYPE_AUDIO) {
+			if (ff->formatC->streams[ff->wma_playstream]->codec->codec_type == AVMEDIA_TYPE_AUDIO) {
 				LOG_INFO("using wma stream sent from server: %i", ff->wma_playstream);
 				audio_stream = ff->wma_playstream;
 			}
@@ -317,7 +313,7 @@ static decode_state ff_decode(void) {
 		if (audio_stream == -1) {
 			unsigned int i;
 			for (i = 0; i < ff->formatC->nb_streams; ++i) {
-				if (ff->formatC->streams[i]->codecpar->codec_type == AVMEDIA_TYPE_AUDIO) {
+				if (ff->formatC->streams[i]->codec->codec_type == AVMEDIA_TYPE_AUDIO) {
 					audio_stream = i;
 					LOG_INFO("found stream: %i", i);
 					break;
@@ -332,22 +328,9 @@ static decode_state ff_decode(void) {
 
 		av_stream = ff->formatC->streams[audio_stream];
 
-		ff->codecC = AVCODEC (ff, alloc_context3, NULL);
-		if ( ff->codecC == NULL ) {
-			LOG_ERROR("can't allocate avctx");
-			return DECODE_ERROR;
-		}
-
-		ff->codecP = av_stream->codecpar;
+		ff->codecC = av_stream->codec;
 
-		if ( (AVCODEC(ff, parameters_to_context, ff->codecC, ff->codecP) ) < 0) {
-			AVCODEC(ff, free_context, &ff->codecC);
-
-			LOG_ERROR("can't initialize avctx");
-			return DECODE_ERROR;
-		}
-
-		codec = AVCODEC(ff, find_decoder, ff->codecP->codec_id);
+		codec = AVCODEC(ff, find_decoder, ff->codecC->codec_id);
 
 		AVCODEC(ff, open2, ff->codecC, codec, NULL);
 
@@ -369,7 +352,7 @@ static decode_state ff_decode(void) {
 
 		LOCK_O;
 		LOG_INFO("setting track_start");
-		output.next_sample_rate = decode_newstream(ff->codecP->sample_rate, output.supported_rates);
+		output.next_sample_rate = decode_newstream(ff->codecC->sample_rate, output.supported_rates);
 		IF_DSD(	output.next_fmt = PCM; )
 		output.track_start = outputbuf->writep;
 		if (output.fade_mode) _checkfade(true);
@@ -546,11 +529,6 @@ static decode_state ff_decode(void) {
 }
 
 static void _free_ff_data(void) {
-	if (ff->codecC) {
-		AVCODEC(ff, free_context, &ff->codecC);
-		ff->codecC = NULL;
-	}
-
 	if (ff->formatC) {
 		if (ff->formatC->pb) AV(ff, freep, &ff->formatC->pb);
 		AVFORMAT(ff, free_context, ff->formatC);
@@ -667,9 +645,6 @@ static bool load_ff() {
 	ff->avcodec_free_frame = dlsym(handle_codec, "avcodec_free_frame");
 #endif
 	ff->avcodec_decode_audio4 = dlsym(handle_codec, "avcodec_decode_audio4");
-	ff->avcodec_alloc_context3 = dlsym(handle_format, "avcodec_alloc_context3");
-	ff->avcodec_free_context = dlsym(handle_format, "avcodec_free_context");
-	ff->avcodec_parameters_to_context = dlsym(handle_format, "avcodec_parameters_to_context");
 	ff->av_init_packet = dlsym(handle_codec, "av_init_packet");
 #if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT(57,24,102)
 	ff->av_packet_unref = dlsym(handle_codec, "av_packet_unref");
